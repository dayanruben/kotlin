<caret_1>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Read
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_2>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Write:
      value = 1
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_3>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Read
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_4>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Read
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_5>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Write:
      value = --
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_6>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaImplicitReceiverValue:
        symbol = KaReceiverParameterSymbol:
          annotationsList: []
          origin: SOURCE
          owningCallableSymbol: KaFunctionSymbol(/foo)
          type: KaUsualClassType:
            annotationsList: []
            typeArguments: []
            type: A
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Read
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_7>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaImplicitReceiverValue:
        symbol = KaReceiverParameterSymbol:
          annotationsList: []
          origin: SOURCE
          owningCallableSymbol: KaFunctionSymbol(/foo)
          type: KaUsualClassType:
            annotationsList: []
            typeArguments: []
            type: A
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Read
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_8>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaImplicitReceiverValue:
        symbol = KaReceiverParameterSymbol:
          annotationsList: []
          origin: SOURCE
          owningCallableSymbol: KaFunctionSymbol(/foo)
          type: KaUsualClassType:
            annotationsList: []
            typeArguments: []
            type: A
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Write:
      value = 1
    typeArgumentsMapping = {}
  isInBestCandidates = true

<caret_9>: KtNameReferenceExpression:
KaApplicableCallCandidateInfo:
  candidate = KaSimpleVariableAccessCall:
    partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
      dispatchReceiver = KaExplicitReceiverValue:
        expression = a
        isSafeNavigation = false
        type = A
      extensionReceiver = null
      signature = KaVariableLikeSignature:
        name = something
        receiverType = null
        returnType = kotlin.Int
        symbol = var something: kotlin.Int
        callableId = /A.something
    simpleAccess = Write:
      value = 1
    typeArgumentsMapping = {}
  isInBestCandidates = true
KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtImplicitReceiverValue:
        symbol = test/A
        type = test.A
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = test/A.foo(<dispatch receiver>: test.A): kotlin.Unit
        valueParameters = []
        callableId = test/A.foo
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = true

KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = test/foo(): kotlin.Unit
        valueParameters = []
        callableId = test/foo
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = false
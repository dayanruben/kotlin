KtSuccessCallInfo:
  call = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = KtExplicitReceiverValue:
        expression = m
        isSafeNavigation = false
        type = MyClass
      signature = KtFunctionLikeSignature:
        receiverType = MyClass
        returnType = kotlin.Int
        symbol = /compareTo(<extension receiver>: T, int: kotlin.Int): kotlin.Int
        valueParameters = [
          KtVariableLikeSignature:
            name = int
            receiverType = null
            returnType = kotlin.Int
            symbol = int: kotlin.Int
            callableId = null
        ]
        callableId = /compareTo
    typeArgumentsMapping = {
      T -> (MyClass)
    }
    argumentMapping = {
      1 -> (KtVariableLikeSignature:
        name = int
        receiverType = null
        returnType = kotlin.Int
        symbol = int: kotlin.Int
        callableId = null)
    }
KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtExplicitReceiverValue:
        expression = m
        isSafeNavigation = false
        type = MyClass
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Int
        symbol = /MyClass.compareTo(<dispatch receiver>: MyClass, value: MyClass): kotlin.Int
        valueParameters = [
          KtVariableLikeSignature:
            name = value
            receiverType = null
            returnType = MyClass
            symbol = value: MyClass
            callableId = null
        ]
        callableId = /MyClass.compareTo
    typeArgumentsMapping = {}
    argumentMapping = {
      m2 -> (KtVariableLikeSignature:
        name = value
        receiverType = null
        returnType = MyClass
        symbol = value: MyClass
        callableId = null)
    }
  isInBestCandidates = true
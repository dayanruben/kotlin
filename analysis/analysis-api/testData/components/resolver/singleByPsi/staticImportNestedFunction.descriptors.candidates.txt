KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtImplicitReceiverValue:
        symbol = one/two/TopLevelObject.Nested
        type = one.two.TopLevelObject.Nested
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = one/two/TopLevelObject.Nested.foo(<dispatch receiver>: one.two.TopLevelObject.Nested): kotlin.Unit
        valueParameters = []
        callableId = one/two/TopLevelObject.Nested.foo
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = true

KtInapplicableCallCandidateInfo:
  diagnostic = ERROR<NO_VALUE_FOR_PARAMETER: No value passed for parameter 'i'>
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtImplicitReceiverValue:
        symbol = one/two/TopLevelObject.Nested
        type = one.two.TopLevelObject.Nested
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = one/two/TopLevelObject.Nested.foo(<dispatch receiver>: one.two.TopLevelObject.Nested, i: kotlin.Int): kotlin.Unit
        valueParameters = [
          KtVariableLikeSignature:
            name = i
            receiverType = null
            returnType = kotlin.Int
            symbol = i: kotlin.Int
            callableId = null
        ]
        callableId = one/two/TopLevelObject.Nested.foo
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = false
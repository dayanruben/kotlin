KtNameReferenceExpression(157,162): 'check'
  KaSuccessCallInfo:
    call = KaSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = m
          isSafeNavigation = false
          type = library3.MyInterface
        extensionReceiver = null
        signature = KaFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = library3/MyInterface.check(<dispatch receiver>: library3.MyInterface, list: {library2.ListAlias<{library1.StringAlias=} kotlin.String>=} kotlin.collections.List<{library1.StringAlias=} kotlin.String>): kotlin.Unit
          valueParameters = [
            KaVariableLikeSignature:
              name = list
              receiverType = null
              returnType = {library2.ListAlias<{library1.StringAlias=} kotlin.String>=} kotlin.collections.List<{library1.StringAlias=} kotlin.String>
              symbol = list: {library2.ListAlias<{library1.StringAlias=} kotlin.String>=} kotlin.collections.List<{library1.StringAlias=} kotlin.String>
              callableId = null
          ]
          callableId = library3/MyInterface.check
      typeArgumentsMapping = {}
      argumentMapping = {
        emptyList() -> (KaVariableLikeSignature:
          name = list
          receiverType = null
          returnType = {library2.ListAlias<{library1.StringAlias=} kotlin.String>=} kotlin.collections.List<{library1.StringAlias=} kotlin.String>
          symbol = list: {library2.ListAlias<{library1.StringAlias=} kotlin.String>=} kotlin.collections.List<{library1.StringAlias=} kotlin.String>
          callableId = null)
      }
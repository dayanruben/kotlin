KtErrorCallInfo:
  candidateCalls = [
    KtSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
        dispatchReceiver = null
        extensionReceiver = null
        signature = KtFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = /generic(): kotlin.Unit
          valueParameters = []
          callableId = /generic
      typeArgumentsMapping = {
        A -> (kotlin.String),
        B -> (kotlin.String),
        C -> (ERROR CLASS: Cannot infer argument for type parameter C)
      }
      argumentMapping = {}
  ]
  diagnostic = ERROR<INAPPLICABLE_CANDIDATE: Inapplicable candidate(s): fun <A, B, C> generic(): Unit>

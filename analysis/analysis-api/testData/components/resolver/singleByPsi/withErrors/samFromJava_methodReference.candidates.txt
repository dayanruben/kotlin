KtDotQualifiedExpression(137,160): 'handler.act(::callback)'
  KaApplicableCallCandidateInfo:
    candidate = KaSimpleFunctionCall:
      isImplicitInvoke = false
      partiallyAppliedSymbol = KaPartiallyAppliedSymbol:
        dispatchReceiver = KaExplicitReceiverValue:
          expression = handler
          isSafeNavigation = false
          type = test.pkg.MyHandler
        extensionReceiver = null
        signature = KaFunctionLikeSignature:
          receiverType = null
          returnType = kotlin.Unit
          symbol = test/pkg/MyHandler.act(<dispatch receiver>: test.pkg.MyHandler, actor: test.pkg.MyInterface!): kotlin.Unit
          valueParameters = [
            KaVariableLikeSignature:
              name = actor
              receiverType = null
              returnType = test.pkg.MyInterface!
              symbol = actor: test.pkg.MyInterface!
              callableId = null
          ]
          callableId = test/pkg/MyHandler.act
      typeArgumentsMapping = {}
      argumentMapping = {
        ::callback -> (KaVariableLikeSignature:
          name = actor
          receiverType = null
          returnType = test.pkg.MyInterface!
          symbol = actor: test.pkg.MyInterface!
          callableId = null)
      }
    isInBestCandidates = true
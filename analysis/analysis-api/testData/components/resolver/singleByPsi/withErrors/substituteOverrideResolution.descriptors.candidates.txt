KtApplicableCallCandidateInfo:
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = KtSmartCastedReceiverValue:
        original = KtExplicitReceiverValue:
          expression = b
          isSafeNavigation = false
          type = main.B?
        type = main.B
      extensionReceiver = null
      signature = KtFunctionLikeSignature:
        receiverType = null
        returnType = kotlin.Unit
        symbol = kotlin/collections/MutableList.clear(<dispatch receiver>: kotlin.collections.MutableList<E>): kotlin.Unit
        valueParameters = []
        callableId = kotlin/collections/MutableList.clear
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = true

KtInapplicableCallCandidateInfo:
  diagnostic = ERROR<null: RECEIVER_TYPE_ERROR with clear>
  candidate = KtSimpleFunctionCall:
    isImplicitInvoke = false
    partiallyAppliedSymbol = KtPartiallyAppliedSymbol:
      dispatchReceiver = null
      extensionReceiver = KtSmartCastedReceiverValue:
        original = KtExplicitReceiverValue:
          expression = b
          isSafeNavigation = false
          type = main.B?
        type = main.B
      signature = KtFunctionLikeSignature:
        receiverType = kotlin.text.StringBuilder
        returnType = kotlin.text.StringBuilder
        symbol = kotlin/text/clear(<extension receiver>: kotlin.text.StringBuilder): kotlin.text.StringBuilder
        valueParameters = []
        callableId = kotlin/text/clear
    typeArgumentsMapping = {}
    argumentMapping = {}
  isInBestCandidates = false
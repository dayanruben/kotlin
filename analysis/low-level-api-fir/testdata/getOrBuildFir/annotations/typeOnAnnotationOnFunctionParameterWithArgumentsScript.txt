KT element: KtAnnotationEntry
FIR element: FirAnnotationCallImpl
FIR source kind: KtRealSourceElementKind

FIR element rendered:
@R|Anno|[Types](value = String(abcd))

FIR FILE:
FILE: [ResolvedTo(IMPORTS)] typeOnAnnotationOnFunctionParameterWithArgumentsScript.kts
    context(<script>@R|kotlin/script/templates/standard/ScriptTemplateWithArgs|)
    SCRIPT: [ResolvedTo(BODY_RESOLVE)] 
        [ResolvedTo(RAW_FIR)] lval args: R|kotlin/Array<kotlin/String>|

        public final [ResolvedTo(RAW_FIR)] fun t([ResolvedTo(RAW_FIR)] addCommaWarning: R|@R|Anno|(value = String(abcd))  kotlin/Boolean|): R|kotlin/Unit| {
        }

        public open [ResolvedTo(STATUS)] class A : R|kotlin/Any| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=A] constructor(): R|A| {
                super<R|kotlin/Any|>()
            }

        }

        @R|kotlin/annotation/Target|[Types](allowedTargets = vararg(Q|kotlin/annotation/AnnotationTarget|.R|kotlin/annotation/AnnotationTarget.TYPE|)) public final [ResolvedTo(STATUS)] annotation class Anno : R|kotlin/Annotation| {
            public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] constructor([ResolvedTo(STATUS)] [CorrespondingProperty=/Anno.value] value: R|kotlin/String|): R|Anno| {
                super<R|kotlin/Any|>()
            }

            public final [ResolvedTo(STATUS)] [IsFromPrimaryConstructor=true] val value: R|kotlin/String| = R|<local>/value|
                public [ResolvedTo(STATUS)] [ContainingClassKey=Anno] get(): R|kotlin/String|

        }
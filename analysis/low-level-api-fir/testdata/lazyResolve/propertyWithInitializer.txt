
RAW_FIR:
FILE: [RAW_FIR] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

IMPORTS:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

COMPILER_REQUIRED_ANNOTATIONS:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [COMPILER_REQUIRED_ANNOTATIONS] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

COMPANION_GENERATION:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [COMPANION_GENERATION] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

SUPER_TYPES:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [SUPER_TYPES] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

TYPES:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public? final? [TYPES] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

STATUS:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [STATUS] fun resolveMe(): R|kotlin/Unit| { LAZY_BLOCK }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

EXPECT_ACTUAL_MATCHING:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [EXPECT_ACTUAL_MATCHING] fun resolveMe(): R|kotlin/Unit| {
        receive#(property#)
    }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

ARGUMENTS_OF_ANNOTATIONS:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [ARGUMENTS_OF_ANNOTATIONS] fun resolveMe(): R|kotlin/Unit| {
        receive#(property#)
    }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

CONTRACTS:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [CONTRACTS] fun resolveMe(): R|kotlin/Unit| {
        receive#(property#)
    }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [IMPLICIT_TYPES_BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
        receive#(property#)
    }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

ANNOTATIONS_ARGUMENTS_MAPPING:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [ANNOTATIONS_ARGUMENTS_MAPPING] fun resolveMe(): R|kotlin/Unit| {
        receive#(property#)
    }
    public? final? [RAW_FIR] val property: Int = LAZY_EXPRESSION
        public? [RAW_FIR] get(): Int

BODY_RESOLVE:
FILE: [IMPORTS] propertyWithInitializer.kt
    [RAW_FIR] annotations container
    public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
        <Unresolved name: receive>#(R|/property|)
    }
    public final [CONTRACTS] val property: R|kotlin/Int| = IntegerLiteral(10)
        public [CONTRACTS] get(): R|kotlin/Int|

FILE RAW TO BODY:
FILE: [IMPORTS] propertyWithInitializer.kt
    [BODY_RESOLVE] annotations container
    public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
        <Unresolved name: receive>#(R|/property|)
    }
    public final [BODY_RESOLVE] val property: R|kotlin/Int| = Int(10)
        public [BODY_RESOLVE] get(): R|kotlin/Int|

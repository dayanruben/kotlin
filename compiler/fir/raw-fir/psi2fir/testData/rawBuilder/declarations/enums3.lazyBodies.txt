FILE: enums3.kt
    public? final? class C : R|kotlin/Any| {
        public? constructor(): R|C| {
            super<R|kotlin/Any|>()
        }

        init {
            local final? enum class Planet : R|kotlin/Enum<C.Planet>| {
                private constructor(m: Double, r: Double): R|C.Planet| {
                    super<R|kotlin/Enum<C.Planet>|>()
                }

                public? final? val m: Double = R|<local>/m|
                    public? get(): Double

                internal final? val r: Double = R|<local>/r|
                    internal get(): Double

                public final static enum entry MERCURY: R|C.Planet| = object : R|C.Planet| {
                    private constructor(): R|<anonymous>| {
                        super<R|C.Planet|>(Double(1.0), Double(2.0))
                    }

                    public? open? override fun sayHello(): R|kotlin/Unit| {
                        println#(String(Hello!!!))
                    }

                }

                public final static enum entry VENERA: R|C.Planet| = object : R|C.Planet| {
                    private constructor(): R|<anonymous>| {
                        super<R|C.Planet|>(Double(3.0), Double(4.0))
                    }

                    public? open? override fun sayHello(): R|kotlin/Unit| {
                        println#(String(Ola!!!))
                    }

                }

                public final static enum entry EARTH: R|C.Planet| = object : R|C.Planet| {
                    private constructor(): R|<anonymous>| {
                        super<R|C.Planet|>(Double(5.0), Double(6.0))
                    }

                    public? open? override fun sayHello(): R|kotlin/Unit| {
                        println#(String(Privet!!!))
                    }

                }

                public? final? val g: Double = G#.times#(m#).div#(r#.times#(r#))
                    public? get(): Double

                public? abstract fun sayHello(): R|kotlin/Unit|

                local final? companion object Companion : R|kotlin/Any| {
                    private constructor(): R|C.Planet.Companion| {
                        super<R|kotlin/Any|>()
                    }

                    public? final? const val G: <implicit> = Double(6.67E-11)
                        public? get(): <implicit>

                }

                public final static fun values(): R|kotlin/Array<C.Planet>| {
                }

                public final static fun valueOf(value: R|kotlin/String|): R|C.Planet| {
                }

                public final static val entries: R|kotlin/enums/EnumEntries<C.Planet>|
                    public get(): R|kotlin/enums/EnumEntries<C.Planet>|

            }

        }

    }

val n: Any?
  field = null
  get

enum class En : Enum<En> {
  private constructor(x: String?) /* primary */ {
    super/*Enum*/<En>()
    /* <init>() */

  }

  val x: String?
    field = x
    get

  ENTRY = En(x = { // BLOCK
    val tmp_0: Any? = <get-n>()
    when {
      EQEQ(arg0 = tmp_0, arg1 = null) -> null
      else -> tmp_0.toString()
    }
  })

  fun values(): Array<En> /* Synthetic body for ENUM_VALUES */

  fun valueOf(value: String): En /* Synthetic body for ENUM_VALUEOF */

  val entries: EnumEntries<En>
    get(): EnumEntries<En> /* Synthetic body for ENUM_ENTRIES */

}


class Test {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

  var resourceTable: ResourceTable?
    field = null
    get(): ResourceTable? {
      when {
        EQEQ(arg0 = <this>.#resourceTable, arg1 = null).not() -> { // BLOCK
          return <this>.#resourceTable
        }
      }
      val fileData: String? = <this>.getFileData()
      when {
        EQEQ(arg0 = fileData, arg1 = null).not() -> { // BLOCK
          <this>.#resourceTable = ResourceTable()
        }
      }
      return { // BLOCK
        val <elvis>: ResourceTable? = <this>.#resourceTable
        when {
          EQEQ(arg0 = <elvis>, arg1 = null) -> ResourceTable()
          else -> <elvis>
        }
      }
    }
    set

  fun getFileData(): String? {
    return ""
  }

}

class ResourceTable {
  constructor() /* primary */ {
    super/*Any*/()
    /* <init>() */

  }

}

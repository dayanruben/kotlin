KtFile: safeQualifiedExpressionWithSelector.kt
  PACKAGE_DIRECTIVE
    <empty list>
  IMPORT_LIST
    <empty list>
  FUN
    PsiElement(fun)('fun')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('test')
    VALUE_PARAMETER_LIST
      PsiElement(LPAR)('(')
      PsiElement(RPAR)(')')
    PsiWhiteSpace(' ')
    BLOCK
      PsiElement(LBRACE)('{')
      PsiWhiteSpace('\n    ')
      BINARY_EXPRESSION
        BINARY_EXPRESSION
          DOT_QUALIFIED_EXPRESSION
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('MyClass')
            PsiElement(DOT)('.')
            PsiErrorElement:Expecting an element
              PsiElement(LT)('<')
          OPERATION_REFERENCE
            PsiElement(IDENTIFIER)('warning')
          PsiWhiteSpace(' ')
          REFERENCE_EXPRESSION
            PsiElement(IDENTIFIER)('descr')
        OPERATION_REFERENCE
          PsiElement(EQ)('=')
        BINARY_EXPRESSION
          BINARY_EXPRESSION
            STRING_TEMPLATE
              PsiElement(OPEN_QUOTE)('"')
              PsiElement(CLOSING_QUOTE)('"')
            OPERATION_REFERENCE
              PsiElement(GT)('>')
            REFERENCE_EXPRESSION
              PsiElement(IDENTIFIER)('Companion')
          OPERATION_REFERENCE
            PsiElement(LT)('<')
          PsiErrorElement:Expecting an element
            PsiElement(DIV)('/')
          PsiErrorElement:Incorrect infix call. Probably ',' or ';' are expected
            <empty list>
      PsiErrorElement:Unexpected tokens (use ';' to separate expressions on the same line)
        PsiElement(IDENTIFIER)('warning')
        PsiElement(GT)('>')
        PsiElement(SAFE_ACCESS)('?.')
        PsiElement(IDENTIFIER)('test')
        PsiElement(SAFE_ACCESS)('?.')
        PsiElement(IDENTIFIER)('test')
      PsiWhiteSpace('\n')
      PsiElement(RBRACE)('}')

//
// Source
// ------------------------------------------

import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.runtime.key
import androidx.compose.runtime.NonRestartableComposable


@NonRestartableComposable @Composable
fun Example(x: Int) {
    // Since the first condition of an if/else is unconditionally executed, it does not
    // necessitate a group of any kind, so we just end up with the function boundary
    // group
    if (B()) {
        NA()
    } else {
        NA()
    }
}

//
// Transformed IR
// ------------------------------------------

@NonRestartableComposable
@Composable
fun Example(x: Int, %composer: Composer?, %changed: Int) {
  sourceInformationMarkerStart(%composer, <>, "C(Example):Test.kt")
  if (isTraceInProgress()) {
    traceEventStart(<>, %changed, -1, <>)
  }
  if (%composer.startReplaceGroup(<>)
  sourceInformation(%composer, "<B()>")
  val tmp0_group = B(%composer, 0)
  %composer.endReplaceGroup()
  tmp0_group) {
    NA()
  } else if (%composer.startReplaceGroup(<>)
  %composer.endReplaceGroup()
  true) {
    NA()
  }
  if (isTraceInProgress()) {
    traceEventEnd()
  }
  sourceInformationMarkerEnd(%composer)
}
